FORMAT: 1A
HOST: https://www.fcpe-norma.fr/api/

# fcpe

FCPE is a API allowing "FCPE Adhésion en ligne" website to create new adhesion in the FCPE Norma Application.

## Informations CDPE Adhesion [/secure/cdpeadhesion/{code}]

+ Parameters
    + code (string) - Code of the CDPE

### Get Infos [GET]
Donne les informations d'un CDPE nécéssaires pour l'adhésion en ligne 

(Java : implémenter un Service ou une méthode dans PerimetreService) 

+ Response 200 (application/json)

        {
            "active": true,
            "perimetre_id": 69,
            "email_contact": "fcpe69@fcpe.fr",
            "paypal": "paypal69@fcpe.fr",
            "cheque_ordre": "FCPE 69",
            "cheque_adresse": {
                "adresse":"16 rue Galilée",
                "adresse2":"",
                "ville":"VILLEURBANNE",
                "pays":"FRANCE",
                "code_postal":"69100"
            },
            "virement_iban": "1234-1234-1234-1234-1234-1234-1234",
            "tarif_adhesion": 25.5,
            "tarif_readhesion": 22.5,
            "abonnement_national": {
                "revue_id": 12,
                "libelle": "Revue des parents",
                "type_abonnement_id": 12,
                "tarif": 3.35
            },
            "abonnements_departementaux": [
                {
                    "revue_id": 13,
                    "libelle": "Revue dept A",
                    "type_abonnement_id": 13,
                    "tarif": 2.00
                },
                {
                    "revue_id": 14,
                    "libelle": "Revue dept B",
                    "type_abonnement_id": 14,
                    "tarif": 3.00
                }
            ]
        }

+ Response 200 (application/json)

        {
            "active": false,
            "perimetre_id": 73,
            "email_contact": "fcpe73@fcpe.fr",
            "paypal": "paypal73@fcpe.fr",
            "cheque_ordre": "FCPE 73",
            "cheque_adresse": "12 avenue Tony Garnier 69007 LYON",
            "virement_iban": "1234-1234-1234-1234-1234-1234-1234",
            "tarif_adhesion": 25.5,
            "tarif_readhesion": 22.5,
            "abonnement_national": {
                "revue_id": 12,
                "libelle": "Revue des parents",
                "type_abonnement_id": 12,
                "tarif": 3.35
            },
            "abonnements_departementaux": [
                {
                    "revue_id": 13,
                    "libelle": "Revue dept A",
                    "type_abonnement_id": 13,
                    "tarif": 2.00
                },
                {
                    "revue_id": 14,
                    "libelle": "Revue dept B",
                    "type_abonnement_id": 14,
                    "tarif": 3.00
                }
            ]
        }

+ Response 404 (application/json)

## Recherche Commune [/public/communes/{search}]

+ Parameters
    + search (string) - Autocomplétion, Recherche commune

### Recherche commune [GET]
Liste les communes qui correspondent au texte recherché (nom ou code postal)

(Java : appel ComponentService.listCommuneByDebutSaisie()) 

+ Response 200 (application/json)

        [
        {
            "commune_id": 12,
            "commune": "LYON 07",
            "code_postal": "69007",
            "pays": "FRANCE",
        },
        {
            "commune_id": 13,
            "commune": "LYON 08",
            "code_postal": "69008",
            "pays": "FRANCE",
        }
        ]

## Liste Etablissements [/public/etablissements/{commune_id}]

+ Parameters
    + commune_id (number) - identifiant commune


### Liste Etablissements [GET]
Liste les établissements qui correspondent à la commune donnée

(Java : appel FoyerService.listEtablissementScolaireByCommune, critère id commune)

+ Response 200 (application/json)

        [
        {
            "etablissement_scolaire_id": 3,
            "nom": "ECOLE MA JULES FERRY",
        },
        {
            "etablissement_scolaire_id": 8,
            "nom": "ECOLE PR JEAN JAURES",
        },
        {
            "etablissement_scolaire_id": 15,
            "nom": "ECOLE PR MARIUS PINARD",
        },
        {
            "etablissement_scolaire_id": 17,
            "nom": "LYCÉE AGRICOLE ET VITICOLE",
        }
        ]
        
## Identification Foyer [/secure/foyers/identification]

### Identification Foyer [POST]
Permet d'identifier et de récpérer les informations de l'adhérent 

(Java : implémenter un nouveau Service dédié, la gestion de mot de passe est une nouvelle fonctionalité) 

Note: le mot de passe devrait de préférence ne jamais circuler en clair, il serait donc préférable qu'un 
hash soit généré (en utilisant un nonce basé sur l'heure) le plus tôt possible (idéalement dès le navigateur) 
et seulement faire circuler cette information.

Note2: le compte devrait se vérouiller automatiquement après un certain nombre de tentatives infructueuses
afin d'éviter une attaque brute force (le blocage pouvant être seulement temporaire).

+ Request (application/json)

        { 
            "email": "sylvain.pras@jetpulp.fr",
            "password": "password",
        }
        
+ Response 200

    + Attributes (Foyer)

## Demande de changement de mot de passe foyer [/secure/foyers/askforchangepassword]

### Changement mot de passe foyer [POST]
Permet de demander le changement du mot de passe d'un foyer, ce denier envoi un mail avec un jeton de validité 

(Java : implémenter un nouveau Service dédié, la gestion de mot de passe est une nouvelle fonctionalité) 

Si l'email n'existe pas dans la base Norma, on 
+ Request (application/json)

        { 
             "email": "sylvain.pras@jetpulp.fr",
             "cdpe": "069",
        }
        
+ Response 200

        {
            
        }
        
+ Response 404

## Changement mot de passe foyer [/secure/foyers/changepassword]

### Changement mot de passe foyer [POST]
Permet de demander le changement du mot de passe d'un foyer 

(Java : implémenter un nouveau Service dédié, la gestion de mot de passe est une nouvelle fonctionalité) 

+ Request (application/json)

        { 
            "token": "0412ffc5e7e1a19d8d23b4e288b3ced4",
            "new_password": "P@ssw0rd!"
        }
        
+ Response 200

## Creation Foyer [/secure/foyers/adhesionenligne]

### Creation Foyer [POST]
Creation ou Edition du foyer en ligne (adhésion et/ou don)

Si c'est une adhesion il ne doit pas y avoir de numéro de foyer, 
si c'est une re-adhesion, le numéro de foyer doit être présent et les informations
du foyer modifiées seront mise à jour.

+ Request (application/json)

    + Attributes
        + foyer (Foyer)
        + operation: [ADHESION|RE_ADHESION|DON_SEUL] (string)
        + paiement: [PAYPAL|CHEQUE|VIREMENT] (string)
        + abonnements (array)
            + type_abonnment_id: 12
        + don: 10 (number)
        
+ Response 200

        { 
            "message" : "ok"
        }

# Data Structures

## Foyer (object)
+ foyer_id: 25 (number) - Identifiant
+ cdpe_id: 69 (number) - Id perimetre du département : issu de l'appel à /secure/cdpeadhesion/{code} ou bien issu du perimetre_appartenance_id du perimetre local lors de la réponse de l'authentification 
+ cpe_principal_id: 12345 (number) - id perimetre local principal du foyer (connu seulement en réadhésion) 
+ adherent_annee_courrante: false (boolean) - true seulement dans le cas de l'identification si le foyer a déjà une adhésion sur l'année en cours.
+ code: 069P1600002 (string) - Code foyer unique
+ parent_principal (Personne)  
+ adresse (Adresse)
+ email: jean.dupond@jetpulp.fr (string)
+ telephone_fixe: 0678784565 (string)
+ telephone_mobile: 0678784565 (string)
+ enfants (array[Enfant])

## Personne (object)
+ nom: DUPOND (string) 
+ prenom: Jean (string) 
+ civilite: Mr (string)

## Adresse (object)
+ adresse: 12 avenue tony Garnier (string)
+ commune_id: 1234 (number)
+ code_postal: 69007 (string)
+ ville: LYON (string)
+ pays: FRANCE (string)

## Enfant (object)
+ nom: DUPOND (string) 
+ prenom: Pierre (string) 
+ date_naissance: 18/09/2010 (string)
+ etablissement_scolaire_id: 3 (number)
+ classe: CP (string)
+ section: test (string)